{"ast":null,"code":"var _jsxFileName = \"/home/aminakenessova/Documents/faceRec/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport Logo from './Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkFrom from './ImageLinkForm/ImageLinkForm';\nimport Rank from './Rank/Rank';\nimport Signin from './Signin/Signin';\nimport Register from './Register/Register';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '3107cb1329ea4f41a0a0abb9f3afc52f'\n});\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:300/image', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: this.state.signInEmail,\n              password: this.state.signInPassword\n            })\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err)); // there was an error\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(ImageLinkFrom, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aminakenessova/Documents/faceRec/facerecognition/src/App.js"],"names":["React","Component","Particles","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkFrom","Rank","Signin","Register","app","App","apiKey","particlesOptions","particles","line_linked","shadow","enable","color","blur","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onPictureSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","signInEmail","password","signInPassword","catch","err","console","log","onRouteChange","route","isSignedIn","render","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport Logo from './Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkFrom from './ImageLinkForm/ImageLinkForm';\nimport Rank from './Rank/Rank';\nimport Signin from './Signin/Signin';\nimport Register from './Register/Register';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n  apiKey: '3107cb1329ea4f41a0a0abb9f3afc52f'\n});\n\nconst particlesOptions = {\n  particles: {\n                  line_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5\n                    }\n                  }\n                }\n}\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n\n  loadUser = (data) =>{\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n\n  }\n\n\n  displayFaceBox= (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange=(event)=>{\n    this.setState({input: event.target.value});\n  }\n\n  onPictureSubmit=()=>{\n    this.setState({imageUrl: this.state.input});\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      if(response) {\n        fetch('http://localhost:300/image', {\n          method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err=> console.log(err));\n        // there was an error\n  }\n\n\n  onRouteChange=(route) => {\n    if(route === 'signout'){\n      this.setState({isSignedIn: false})\n    }\n    else if(route ==='home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className = 'particles'\n              params={particlesOptions}\n      />\n      <Navigation isSignedIn={isSignedIn} onRouteChange = {this.onRouteChange} />\n      {route === 'home' \n        ? <div> \n        <Logo />\n        <ImageLinkFrom \n        onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n        <Rank />\n        <FaceRecognition box = {box} imageUrl={imageUrl}/>\n      </div>\n\n      : (\n            route ==='signin'\n          ? <Signin loadUser ={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange ={this.onRouteChange}/>\n        )      \n    }\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}